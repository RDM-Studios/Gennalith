buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://maven.parchmentmc.org' }
        jcenter()
        mavenCentral()
        maven { url = 'https://dist.creeper.host/Sponge/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
    }
    dependencies {
        classpath(group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true) { exclude group: 'org.apache.logging.log4j' }
        classpath 'org.parchmentmc:librarian:1.+'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: "org.spongepowered.mixin"
apply plugin: "eclipse"
apply plugin: "maven-publish"

version = "${mc_version}-${mod_version}"
group = project.group
archivesBaseName = project.modid

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: "${mappings_channel}", version:"${mappings_version}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=${modid}.mixins.json"
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=${modid}.mixins.json"
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            args '--mod', "${modid}", '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

mixin {
    add sourceSets.main, "${modid}.refmap.json"

    config "${modid}.mixins.json"
}

repositories {
    maven {
        name = "CurseForge Maven" // Base
		url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
	}
    maven {
        name = "Architectury Maven" // Architectury
        url "https://maven.architectury.dev/"
    }
    maven { 
		name = "Shedaniel Maven" // REI + Cloth Config
		url "https://maven.shedaniel.me" 
    }
}

dependencies {
    //Base
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    //Extras
    implementation fg.deobf("me.shedaniel:RoughlyEnoughItems-forge:${rei_version}")
    implementation fg.deobf("curse.maven:roughly-enough-resources-325625:${rer_version}")
    
    implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:${cloth_config_version}")
    implementation fg.deobf("dev.architectury:architectury-forge:${architectury_version}")

    implementation fg.deobf("curse.maven:configured-457570:${configured_version}")
    implementation fg.deobf("curse.maven:catalogue-459701:${catalogue_version}")

    implementation fg.deobf("curse.maven:the-one-probe-245211:${top_version}")

    runtimeOnly	fg.deobf("curse.maven:appleskin-248787:${appleskin_version}")

    runtimeOnly fg.deobf("curse.maven:spark-361579:${spark_version}")
    
}
jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_name,
                "Specification-Vendor"    : "RDM Studios",
                "Specification-Version"   : project.mod_version,
                "Implementation-Title"    : project.mod_name,
                "Implementation-Version"  : project.mod_version,
                "Implementation-Vendor"   : "RDM Studios",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
		"MixinConfigs": "${modid}.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

processResources {
	exclude '**/.cache/'

	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}